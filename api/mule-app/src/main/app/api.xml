<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="put:/issuers/{id}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;updated&quot;,&#xA;  &quot;issuer-organization&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Issuer&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;name&quot;: &quot;An Example Badge Issuer&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/logo.png&quot;,&#xA;    &quot;url&quot;: &quot;https://example.org&quot;,&#xA;    &quot;email&quot;: &quot;steved@example.org&quot;,&#xA;    &quot;revocationList&quot;: &quot;https://example.org/revoked.json&quot;&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/issuers/{id}/badges/{id}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;updated&quot;,&#xA;  &quot;badge-class&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;BadgeClass&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;name&quot;: &quot;Awesome Robotics Badge&quot;,&#xA;    &quot;description&quot;: &quot;For doing awesome things with robots that people think is pretty great.&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/robotics-badge.png&quot;,&#xA;    &quot;criteria&quot;: &quot;https://example.org/robotics-badge.html&quot;,&#xA;    &quot;tags&quot;: [&quot;robots&quot;, &quot;awesome&quot;],&#xA;    &quot;issuer&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;alignment&quot;: [&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.3&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/3&quot;,&#xA;        &quot;description&quot;: &quot;Follow precisely a complex multistep procedure when &#xA;        carrying out experiments, taking measurements, or performing technical &#xA;        tasks; analyze the specific results based on explanations in the text.&quot;&#xA;      },&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.9&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/9&quot;,&#xA;        &quot;description&quot;: &quot; Synthesize information from a range of sources (e.g.,&#xA;        texts, experiments, simulations) into a coherent understanding of a&#xA;        process, phenomenon, or concept, resolving conflicting information when&#xA;        possible.&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/issuers/{id}/badges/{id}/assertions/{uid}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;updated&quot;,&#xA;  &quot;assertion&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Assertion&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;,&#xA;    &quot;uid&quot;: &quot;f2c20&quot;,&#xA;    &quot;recipient&quot;: {&#xA;      &quot;type&quot;: &quot;email&quot;,&#xA;      &quot;hashed&quot;: true,&#xA;      &quot;salt&quot;: &quot;deadsea&quot;,&#xA;      &quot;identity&quot;: &quot;sha256$c7ef86405ba71b85acd8e2e95166c4b111448089f2e1599f42fe1bba46e865c5&quot;&#xA;    },&#xA;    &quot;image&quot;: &quot;https://example.org/beths-robot-badge.png&quot;,&#xA;    &quot;evidence&quot;: &quot;https://example.org/beths-robot-work.html&quot;,&#xA;    &quot;issuedOn&quot;: 1359217910,&#xA;    &quot;expires&quot;: 1609458300,&#xA;    &quot;badge&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;verify&quot;: {&#xA;      &quot;type&quot;: &quot;hosted&quot;,&#xA;      &quot;url&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;&#xA;    }&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/issuers/{id}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;deleted&quot;,&#xA;  &quot;issuer-organization&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Issuer&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;name&quot;: &quot;An Example Badge Issuer&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/logo.png&quot;,&#xA;    &quot;url&quot;: &quot;https://example.org&quot;,&#xA;    &quot;email&quot;: &quot;steved@example.org&quot;,&#xA;    &quot;revocationList&quot;: &quot;https://example.org/revoked.json&quot;&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/issuers/{id}/badges/{id}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;deleted&quot;,&#xA;  &quot;badge-class&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;BadgeClass&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;name&quot;: &quot;Awesome Robotics Badge&quot;,&#xA;    &quot;description&quot;: &quot;For doing awesome things with robots that people think is pretty great.&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/robotics-badge.png&quot;,&#xA;    &quot;criteria&quot;: &quot;https://example.org/robotics-badge.html&quot;,&#xA;    &quot;tags&quot;: [&quot;robots&quot;, &quot;awesome&quot;],&#xA;    &quot;issuer&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;alignment&quot;: [&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.3&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/3&quot;,&#xA;        &quot;description&quot;: &quot;Follow precisely a complex multistep procedure when &#xA;        carrying out experiments, taking measurements, or performing technical &#xA;        tasks; analyze the specific results based on explanations in the text.&quot;&#xA;      },&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.9&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/9&quot;,&#xA;        &quot;description&quot;: &quot; Synthesize information from a range of sources (e.g.,&#xA;        texts, experiments, simulations) into a coherent understanding of a&#xA;        process, phenomenon, or concept, resolving conflicting information when&#xA;        possible.&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/issuers/{id}/badges/{id}/assertions/{uid}:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;deleted&quot;,&#xA;  &quot;assertion&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Assertion&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;,&#xA;    &quot;uid&quot;: &quot;f2c20&quot;,&#xA;    &quot;recipient&quot;: {&#xA;      &quot;type&quot;: &quot;email&quot;,&#xA;      &quot;hashed&quot;: true,&#xA;      &quot;salt&quot;: &quot;deadsea&quot;,&#xA;      &quot;identity&quot;: &quot;sha256$c7ef86405ba71b85acd8e2e95166c4b111448089f2e1599f42fe1bba46e865c5&quot;&#xA;    },&#xA;    &quot;image&quot;: &quot;https://example.org/beths-robot-badge.png&quot;,&#xA;    &quot;evidence&quot;: &quot;https://example.org/beths-robot-work.html&quot;,&#xA;    &quot;issuedOn&quot;: 1359217910,&#xA;    &quot;expires&quot;: 1609458300,&#xA;    &quot;badge&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;verify&quot;: {&#xA;      &quot;type&quot;: &quot;hosted&quot;,&#xA;      &quot;url&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;&#xA;    }&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers:api-config">
        <set-payload value="[&#xA;  {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Issuer&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;name&quot;: &quot;An Example Badge Issuer&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/logo.png&quot;,&#xA;    &quot;url&quot;: &quot;https://example.org&quot;,&#xA;    &quot;email&quot;: &quot;steved@example.org&quot;,&#xA;    &quot;revocationList&quot;: &quot;https://example.org/revoked.json&quot;&#xA;  },&#xA;  { ... },&#xA;  { ... }&#xA;]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers/{id}:api-config">
        <set-payload value="{&#xA;  &quot;issuer-organization&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Issuer&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;name&quot;: &quot;An Example Badge Issuer&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/logo.png&quot;,&#xA;    &quot;url&quot;: &quot;https://example.org&quot;,&#xA;    &quot;email&quot;: &quot;steved@example.org&quot;,&#xA;    &quot;revocationList&quot;: &quot;https://example.org/revoked.json&quot;&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers/{id}/badges:api-config">
        <set-payload value="[&#xA;  {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;BadgeClass&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;name&quot;: &quot;Awesome Robotics Badge&quot;,&#xA;    &quot;description&quot;: &quot;For doing awesome things with robots that people think is pretty great.&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/robotics-badge.png&quot;,&#xA;    &quot;criteria&quot;: &quot;https://example.org/robotics-badge.html&quot;,&#xA;    &quot;tags&quot;: [&quot;robots&quot;, &quot;awesome&quot;],&#xA;    &quot;issuer&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;alignment&quot;: [&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.3&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/3&quot;,&#xA;        &quot;description&quot;: &quot;Follow precisely a complex multistep procedure when &#xA;        carrying out experiments, taking measurements, or performing technical &#xA;        tasks; analyze the specific results based on explanations in the text.&quot;&#xA;      },&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.9&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/9&quot;,&#xA;        &quot;description&quot;: &quot; Synthesize information from a range of sources (e.g.,&#xA;        texts, experiments, simulations) into a coherent understanding of a&#xA;        process, phenomenon, or concept, resolving conflicting information when&#xA;        possible.&quot;&#xA;      }&#xA;    ]&#xA;  },&#xA;  { ... },&#xA;  { ... }&#xA;]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers/{id}/badges/{id}:api-config">
        <set-payload value="{&#xA;  &quot;badge-class&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;BadgeClass&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;name&quot;: &quot;Awesome Robotics Badge&quot;,&#xA;    &quot;description&quot;: &quot;For doing awesome things with robots that people think is pretty great.&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/robotics-badge.png&quot;,&#xA;    &quot;criteria&quot;: &quot;https://example.org/robotics-badge.html&quot;,&#xA;    &quot;tags&quot;: [&quot;robots&quot;, &quot;awesome&quot;],&#xA;    &quot;issuer&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;alignment&quot;: [&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.3&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/3&quot;,&#xA;        &quot;description&quot;: &quot;Follow precisely a complex multistep procedure when &#xA;        carrying out experiments, taking measurements, or performing technical &#xA;        tasks; analyze the specific results based on explanations in the text.&quot;&#xA;      },&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.9&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/9&quot;,&#xA;        &quot;description&quot;: &quot; Synthesize information from a range of sources (e.g.,&#xA;        texts, experiments, simulations) into a coherent understanding of a&#xA;        process, phenomenon, or concept, resolving conflicting information when&#xA;        possible.&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers/{id}/badges/{id}/assertions:api-config">
        <set-payload value="[&#xA;  {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Assertion&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;,&#xA;    &quot;uid&quot;: &quot;f2c20&quot;,&#xA;    &quot;recipient&quot;: {&#xA;      &quot;type&quot;: &quot;email&quot;,&#xA;      &quot;hashed&quot;: true,&#xA;      &quot;salt&quot;: &quot;deadsea&quot;,&#xA;      &quot;identity&quot;: &quot;sha256$c7ef86405ba71b85acd8e2e95166c4b111448089f2e1599f42fe1bba46e865c5&quot;&#xA;    },&#xA;    &quot;image&quot;: &quot;https://example.org/beths-robot-badge.png&quot;,&#xA;    &quot;evidence&quot;: &quot;https://example.org/beths-robot-work.html&quot;,&#xA;    &quot;issuedOn&quot;: 1359217910,&#xA;    &quot;expires&quot;: 1609458300,&#xA;    &quot;badge&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;verify&quot;: {&#xA;      &quot;type&quot;: &quot;hosted&quot;,&#xA;      &quot;url&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;&#xA;    }&#xA;  },&#xA;  { ... },&#xA;  { ... }&#xA;]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/issuers/{id}/badges/{id}/assertions/{uid}:api-config">
        <set-payload value="{&#xA;  &quot;assertion&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Assertion&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;,&#xA;    &quot;uid&quot;: &quot;f2c20&quot;,&#xA;    &quot;recipient&quot;: {&#xA;      &quot;type&quot;: &quot;email&quot;,&#xA;      &quot;hashed&quot;: true,&#xA;      &quot;salt&quot;: &quot;deadsea&quot;,&#xA;      &quot;identity&quot;: &quot;sha256$c7ef86405ba71b85acd8e2e95166c4b111448089f2e1599f42fe1bba46e865c5&quot;&#xA;    },&#xA;    &quot;image&quot;: &quot;https://example.org/beths-robot-badge.png&quot;,&#xA;    &quot;evidence&quot;: &quot;https://example.org/beths-robot-work.html&quot;,&#xA;    &quot;issuedOn&quot;: 1359217910,&#xA;    &quot;expires&quot;: 1609458300,&#xA;    &quot;badge&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;verify&quot;: {&#xA;      &quot;type&quot;: &quot;hosted&quot;,&#xA;      &quot;url&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;&#xA;    }&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/issuers:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;created&quot;,&#xA;  &quot;issuer-organization&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Issuer&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;name&quot;: &quot;An Example Badge Issuer&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/logo.png&quot;,&#xA;    &quot;url&quot;: &quot;https://example.org&quot;,&#xA;    &quot;email&quot;: &quot;steved@example.org&quot;,&#xA;    &quot;revocationList&quot;: &quot;https://example.org/revoked.json&quot;&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/issuers/{id}/badges:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;created&quot;,&#xA;  &quot;badge-class&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;BadgeClass&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;name&quot;: &quot;Awesome Robotics Badge&quot;,&#xA;    &quot;description&quot;: &quot;For doing awesome things with robots that people think is pretty great.&quot;,&#xA;    &quot;image&quot;: &quot;https://example.org/robotics-badge.png&quot;,&#xA;    &quot;criteria&quot;: &quot;https://example.org/robotics-badge.html&quot;,&#xA;    &quot;tags&quot;: [&quot;robots&quot;, &quot;awesome&quot;],&#xA;    &quot;issuer&quot;: &quot;https://example.org/organization.json&quot;,&#xA;    &quot;alignment&quot;: [&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.3&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/3&quot;,&#xA;        &quot;description&quot;: &quot;Follow precisely a complex multistep procedure when &#xA;        carrying out experiments, taking measurements, or performing technical &#xA;        tasks; analyze the specific results based on explanations in the text.&quot;&#xA;      },&#xA;      { &quot;name&quot;: &quot;CCSS.ELA-Literacy.RST.11-12.9&quot;,&#xA;        &quot;url&quot;: &quot;http://www.corestandards.org/ELA-Literacy/RST/11-12/9&quot;,&#xA;        &quot;description&quot;: &quot; Synthesize information from a range of sources (e.g.,&#xA;        texts, experiments, simulations) into a coherent understanding of a&#xA;        process, phenomenon, or concept, resolving conflicting information when&#xA;        possible.&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/issuers/{id}/badges/{id}/assertions:api-config">
        <set-payload value="{&#xA;  &quot;status&quot;: &quot;created&quot;,&#xA;  &quot;assertion&quot;: {&#xA;    &quot;@context&quot;: &quot;https://w3id.org/openbadges/v1&quot;,&#xA;    &quot;type&quot;: &quot;Assertion&quot;,&#xA;    &quot;id&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;,&#xA;    &quot;uid&quot;: &quot;f2c20&quot;,&#xA;    &quot;recipient&quot;: {&#xA;      &quot;type&quot;: &quot;email&quot;,&#xA;      &quot;hashed&quot;: true,&#xA;      &quot;salt&quot;: &quot;deadsea&quot;,&#xA;      &quot;identity&quot;: &quot;sha256$c7ef86405ba71b85acd8e2e95166c4b111448089f2e1599f42fe1bba46e865c5&quot;&#xA;    },&#xA;    &quot;image&quot;: &quot;https://example.org/beths-robot-badge.png&quot;,&#xA;    &quot;evidence&quot;: &quot;https://example.org/beths-robot-work.html&quot;,&#xA;    &quot;issuedOn&quot;: 1359217910,&#xA;    &quot;expires&quot;: 1609458300,&#xA;    &quot;badge&quot;: &quot;https://example.org/robotics-badge.json&quot;,&#xA;    &quot;verify&quot;: {&#xA;      &quot;type&quot;: &quot;hosted&quot;,&#xA;      &quot;url&quot;: &quot;https://example.org/beths-robotics-badge.json&quot;&#xA;    }&#xA;  }&#xA;}" doc:name="Set Payload"/>
    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
